
・비교연산자(결과는 boolean값)
==(같다)  !=(다르다)  <(크다)  >(작다)  <=(크거나 같다)  >=(작거나 같다)

int i = 10;
int j = 10;

System.out.println(i == j);　←　true
System.out.println(i != j);　←　false

i += 10　←/동일/→　i = i + 10
System.out.println(i);　←　20 
System.out.println(i -=5);　←　15 



・연산자 우선순위
  최우선연산자 ( ., [], () )
  단항연산자 ( ++,--,!,~,+/-   : 부정, bit변환>부호>증감)
  산술연산자 ( *,/,%,+,-,shift) < 시프트연산자 ( >>,<<,>>> ) >
  비교연산자 ( >,<,>=,<=,==,!= )
  비트연산자 ( &,|,,~ )
  논리연산자 (&&(and) , ||(or) , !)　 //  && > ||
  삼항연산자 (조건식) ? :
  대입연산자 =,*=,/=,%=,+=,-=

    int a = 5;
    int b = 10;
    int c = 15;

    System.out.println(a - b * c);　←　-145
    System.out.println((a - b) * c);　←　-75
    System.out.println(a > 5 && b > 5);　←　false
    System.out.println(a > 5 || b > 5);　←　true
    
    System.out.println(++a - 5);　←　1
    System.out.println(a);　←　6 //위의 a에 영향
    -
    System.out.println(a++ - 5);　←　0
    System.out.println(a);　←　6 //위의 a에 영향


-----------------------------------------------------------------------------

・조건문：조건식의 연산 결과에 따라 블록 내부 문장의 실행 여부를 결정 할 수 있다.
  （１）if 문：조건식이 true 일 경우에만 실행문이 실행된다.
  （２）if - else 문：조건식이 true일 경우 if 블록의 실행문이 실행되고, flase 일 경우 else 블록의 실행문이 실행된다.
  （３）if - else if - else문：처음 if문의 조건식의 조건문이 true일 경우 처음 if문의 블록이 실행되고, false일 경우 다음 조건식의 결과에 따라 실행 블록이 달라진다.
                          　 else if 문의 수는 제한이 없다. 그러나 너무 많은 else if 문은 실행 속도를 느리게 한다.
                          　 마지막 else 블록은 생략되도 상관없다.


・삼항연산자
    조건식 ? 피연산자1 : 피연산자2

  조건식의 연산결과가 true 이면, 결과는 피연산자 1이고, 조건식의 연산결과가 false 이면 결과는 피연산자2
      int b1 = (5>4) ? 50 : 40;   //조건식이 true이므로 b1은 50이 된다. 