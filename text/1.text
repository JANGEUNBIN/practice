https://programmers.co.kr/learn/courses/5

・자바란?
    1995년에 썬 마이크로시스템즈에서 발표한 객체지향 언어
    현재 썬 마이크로시스템즈는 오라클에 인수가 된 상태
・자바의 특징
    쉬운 언어이다.
    C와 C++언어의 문법을 기본으로 차용하여 개발된 언어
    C와 C++ 이 가진 어려운 문법인 포인터와 다중 상속 제거
    C와 C++에 비해 쉬운 언어이다.
    플랫폼에 독립적이다.
    자바는 JVM() 만 있으면 윈도우, 리눅스, 맥등 어떤 플랫폼에서도 실행이 가능
    객체지향 언어이다.
    메모리 관리를 자동으로 해준다.

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

・주석문
주석이란, 프로그램의 코드와 실행에는 영향을 주지 않는 문장
１）구현 주석
    행단위 주석 (// 를 해주면, 해당 행이 주석 처리됨 )
    블럭단위 주석 (/* 주석으로 사용할 내용 */ )
２）문서화 주석
    /** 문서에 포함할 내용을 작성함 */
    (문서화 주석은 클래스, 인터페이스 그리고 멤버 당 하나씩 가질 수 있고, 선언 바로 전에 작성)
    


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


・변수：변수란 값을 저장할 수 있는 메모리의 공간을 의미한다. (반찬:데이터/반찬이 담긴 그릇:변수)
・변수의 선언방법：타입 변수이름;
              int count; (정수 값을 담을 수 있는 count라는 이름의 변수를 선언)
              double average; (실수 값을 담을 수 있는 average 라는 변수를 선언)


・명명규칙
    변수의 이름을 정할 때 자바 언어에서 정해놓은 규칙
    식별자 (identifier)는 클래스, 메소드, 변수 등 다양한 대상에 대해 이름이 붙여지는 경우. 그 이름을 뜻 함
      ＊java 식별자 명명 규칙：하나 이상의 글자로 이루어져야 함

    1)첫 번째 글자는 문자 이거나 '$', '_'이어야 함
    2)두번재 이후의 글자는 숫자, 문자, '$', '_'이어야 함
    3)'$', '_' 이외의 특수문자 사용 불가능
    4)길이 제한이 없음
    5)키워드는 식별자로 사용할 수 없음
    6)상수 값을 표현하는 단어 true, false, null은 식별자로 사용할 수 없음

      ＊변수 명명 관례
        ・첫 번째 문자가 소문자인 명사로 정함
        ・여러 단어로 구성된 이름의 경우 두번째 단어부터 첫글자를 대문자로 함
        ・'_'을 쓰지 않음
        ・규칙은 반드시 지켜야 한다. 지키지 않으면 컴파일시 에러가 발생함.
        ・관례는 지키지 않아도 컴파일에러가 발생하지는 않지만, 약속이기 때문에 지켜주는것이 좋다.


・변수의 사용
  변수명 = 값;
    count = 10; (count 라는 int형 변수에 정수값 10을 담습니다.)
    count = 20; (count 라는 int형 변수에 정수값 20을 담습니다. 원래 담겨있던 10은 없어집니다. 변수는 값이 얼마든지 변할 수 있습니다.)
    average = 11.1 (average라는 double형 변수에 실수 값 11.1 을 담습니다. )


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

・상수：상수(常數)란 수식에서 변하지 않는 값을 의미한다.
・상수의 선언：final 상수타입 상수명;
            final int J;
・상수의 사용：상수명 = 값;
            J = 10; (J에는 값을 담을 수 있는 기회가 단 한 번만 허락됨)

    *상수 명명 관례
      ・대문자로만 구성된 명사로 정함
      ・여러 단어로 구성된 이름의 경우 단어 사이에 '_'을 써서 구분함.

    ・상수를 사용해야 하는 경우
      값이 변하면 위험한 경우에 상수를 사용
      값만 봤을때 무엇을 의미하는지 쉽게 파악할 수 없는 값에도 값 자체를 사용하기 보다는 상수를 사용


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


기본형 타입
・기본형：기본형 타입은 가장 기본이 되는 데이터 타입으로써 정수형, 실수형, 문자형, 불린형을 의미한다.
・논리형：논리형은 크기가 1byte이고 true와 false 중에 한 가지 값을 가질 수 있다.
・문자형：문자형은 char로 2byte크기를 가집니다. 문자는 작은따옴표를 이용하여 한 글자를 표현할 수 있다.
・정수형：정수형은 정수를 표현하는 데이터 타입인데 표현할 수 있는 정수의 범위에 따라서 다양하게 제공된다.
    정수형에서 가장 자주 사용하는 int는 4바이트이다.
    long형은 8byte크기를 가진다. int 보다 더 큰 범위의 정수를 표현하고 싶을때 사용한다.

실수형：실수형은 float과 double형이 있다.
    float은 4바이트, double은 8바이트로 double은 float보다 더 큰 범위의 실수를 표현할 수 있다.

리터럴：컴퓨터 과학 분야에서 리터럴이란, 소스 코드의 고정된 값을 대표하는 용어다.
      리터럴은 일종의 값이다. true, false, 10, 11.1, a 등 이런 값 자체를 리터럴이라고 한다.

＊기본형 타입의 사용 방법
  boolean isFun = true;
  char c ='f';
  int x = 59;
  long big = 3456789L; (값을 적을때는 뒤에 소문자 l이나 대문자 L을 적어야 합니다.)
  float f = 32.5f (float에 값을 대입할 때는 실수 뒤에 소문자 f나 대문자 F를 붙여야 합니다.)
  double d = 23.34;


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


기본형 타입(형)변환：형변환이란, 변수 또는 리터럴의 타입을 다른 타입으로 변환하는 것이다.
  크기：byte < short, char < int < long < float < double

１）묵시적 형변환：크기가 작은 타입을 크기가 더 큰 타입으로 바꿀 때에는 묵시적으로 형을 바꾸어 준다.
  int x = 50000; 
  long y = x;
이를 암묵적 형변환 이라고도 한다.

２）명시적 형변환：크기가 더 큰 타입을 작은 타입으로 바꿀 때에는 명시적으로 변환 해주어야 한다.
  long x = 50000;
  //int y = x; (이렇게 묵시적으로 수행하면 컴파일러는 오류를 발생 시킨다.)
  int y = (int) x; (반드시 (타입) 으로 명시적으로 형을 바꾸어 주어야 한다.)
이를 강제 형변환 이라고도 한다.